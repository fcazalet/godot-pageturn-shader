[gd_scene load_steps=9 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]
[ext_resource path="res://background1.png" type="Texture" id=2]

[sub_resource type="Animation" id=2]
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("PathFollow2D:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 2131.88 ]
}

[sub_resource type="Animation" id=3]
resource_name = "moving"
length = 4.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PathFollow2D:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 2131.88 ]
}

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;
render_mode unshaded;

uniform int intensity : hint_range(0,3000); 
uniform float precision : hint_range(0,0.02);
uniform vec4 outline_color : hint_color;

varying vec2 o;
varying vec2 f;

void vertex()
{
	o = VERTEX;
	vec2 uv = (UV - 0.5);
	VERTEX += uv * float(intensity);
	f = VERTEX;
}

void fragment()
{
	ivec2 t = textureSize(TEXTURE, 0);
	vec2 regular_uv;
	regular_uv.x = UV.x + (f.x - o.x)/float(t.x);
	regular_uv.y = UV.y + (f.y - o.y)/float(t.y);
	
	vec4 regular_color = texture(TEXTURE, regular_uv);
	if((regular_uv.x < 0.0 || regular_uv.x > 1.0) || (regular_uv.y < 0.0 || regular_uv.y > 1.0) || regular_color.a <=0.25){
		regular_color = vec4(0.0); 
	}
	
	vec2 ps = TEXTURE_PIXEL_SIZE * float(intensity) * precision;
	
	vec4 final_color = regular_color;
	if (regular_color.a <= 0.0)
	{
		for(int x = -1; x <= 1; x += 1){
			for(int y = -1; y <= 1; y += 1){
				//Get the X and Y offset from this
				if (x==0 && y==0)
					continue;
					
				vec2 outline_uv = regular_uv + vec2(float(x) * ps.x, float(y) * ps.y); 
				
				//Sample here, if we are out of bounds then fail
				vec4 outline_sample = texture(TEXTURE, outline_uv);
				if((outline_uv.x < 0.0 || outline_uv.x > 1.0) || (outline_uv.y < 0.0 || outline_uv.y > 1.0)){
					//We aren't a real color
					outline_sample = vec4(0);
				}
				
				//Is our sample empty? Is there something nearby?
				if(outline_sample.a > final_color.a){
					final_color = outline_color;
				}
			}
		}
	}
	COLOR = final_color; 
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/intensity = 2000
shader_param/precision = 0.01
shader_param/outline_color = Color( 1, 1, 1, 1 )

[sub_resource type="Curve2D" id=1]
_data = {
"points": PoolVector2Array( -49.9724, 278.011, 49.9724, -278.011, 99, 237, -88.1315, -6.81372, 88.1315, 6.81372, 620, 194, 71.0603, -119.498, -71.0603, 119.498, 921, 492, 261.819, -8.58422, -261.819, 8.58422, 309, 530, 0, 0, 0, 0, 99, 237 )
}

[sub_resource type="ParticlesMaterial" id=8]
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 98, 0 )
initial_velocity = 107.84
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale = 10.0
color = Color( 1, 0.980392, 0.0666667, 1 )

[node name="ViewportScene" type="Node2D"]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Path2D")
autoplay = "moving"
anims/RESET = SubResource( 2 )
anims/moving = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 7 )
position = Vector2( 12, 25 )
scale = Vector2( 0.659333, 0.428906 )
texture = ExtResource( 2 )
centered = false

[node name="Path2D" type="Path2D" parent="."]
curve = SubResource( 1 )

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
position = Vector2( 728.294, 233.898 )
rotation = 0.49201

[node name="Sprite" type="Sprite" parent="Path2D/PathFollow2D"]
modulate = Color( 0.917647, 0.713726, 1, 1 )
texture = ExtResource( 1 )

[node name="Sprite2" type="Sprite" parent="Path2D/PathFollow2D"]
modulate = Color( 0.917647, 0.713726, 1, 1 )
position = Vector2( -90.4745, 28.947 )
texture = ExtResource( 1 )

[node name="Particles2D" type="Particles2D" parent="Path2D/PathFollow2D"]
amount = 30
local_coords = false
process_material = SubResource( 8 )
